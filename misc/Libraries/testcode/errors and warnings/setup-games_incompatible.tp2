// Never Forget: Comments can "lie", but code not so much ;P
BACKUP ~./weidu_external/games_incompatible/backup~ // %MOD_FOLDER% doesn't work here
AUTHOR ~YOU~
VERSION ~v0.0.0~
//AUTO_EVAL_STRINGS// This will prevent the need of EVAL for string variables


// --------------
// Initialization
// --------------
ALWAYS 
	// LIBRARY INCLUDES(Don't change these)
	// ------------------------------------
	INCLUDE ~%MOD_FOLDER%/lib/errors.tph~
	
	// CREATING ITEM FILE(for testing patch version)
	// ----------------------------------------------
	CREATE ~ITM~ ~Testfile~
	
END// End of "ALWAYS"


LANGUAGE
	~English~	// Language
	~English~	// Directory
	~%MOD_FOLDER%/en_US/!_errors.tra~
	
LANGUAGE
	~Deutsch~	// Language
	~German~	// Directory
	~%MOD_FOLDER%/de_DE/!_errors.tra~



// -----------
// Start Tests
// -----------
BEGIN ~Games incompatible~

// Creates an array with game shortcuts which are incompatible with mod
ACTION_DEFINE_ARRAY games_incompatible
BEGIN 
	~bg2~
 	~tob~
	~iwd2~
	~pst~
	~bg1~
	~totsc~
	~iwd1~
	~how~
	~totlm~
	~tutu~
	~tutu_totsc~
	~bgt~
	~ca~
	~iwd_in_bg2~
	~bgee~
	~bg2ee~
	~eet~
	~iwdee~
	~pstee~ 
END

/*
// OUTSIDE OF PATCHING
// -------------------
OUTER_SPRINT error @2147483647

// Checks all game shortcuts
OUTER_FOR (index = 0; VARIABLE_IS_SET $games_incompatible(~%index%~); ++index) BEGIN

	// Gets specific game shortcut
	OUTER_TEXT_SPRINT game $games_incompatible(~%index%~)

	// Calls error 
	LAF ERR_EVALUATE_GAME_EXISTANCE 
		STR_VAR 
			game 	= EVAL ~%game%~
			message = EVAL ~%error%~
		END
END
*/

// PATCHING ITEM TESTFILE
// ----------------------
COPY_EXISTING ~Testfile.ITM~ ~%MOD_FOLDER%~
SPRINT error @2147483647

FOR (index = 0; VARIABLE_IS_SET $games_incompatible(~%index%~); ++index) BEGIN

	// Gets specific game shortcut
	TEXT_SPRINT game $games_incompatible(~%index%~)

	// Calls error 
	LPF ERR_EVALUATE_GAME_EXISTANCE 
		STR_VAR 
			game 	= EVAL ~%game%~
			message = EVAL ~%error%~
		END
END